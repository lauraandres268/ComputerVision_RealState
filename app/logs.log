2025-07-12 20:50:39,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-12 20:50:39,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-12 20:50:39,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-12 20:50:39,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-07-12 20:51:05,402:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 20:51:05,402:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 20:51:12,208:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 20:51:12,209:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 20:52:26,246:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 20:52:26,247:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 20:52:26,529:INFO:Initializing load_model()
2025-07-12 20:52:26,529:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 20:52:26,548:INFO:Initializing predict_model()
2025-07-12 20:52:26,549:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaec4c01c0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abc39c47520>)
2025-07-12 20:52:26,549:INFO:Checking exceptions
2025-07-12 20:52:26,549:INFO:Preloading libraries
2025-07-12 20:56:14,177:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 20:56:14,178:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 20:56:44,251:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 20:56:44,251:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:02:20,935:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:02:20,935:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:02:41,665:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:02:41,665:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:03:29,583:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:03:29,584:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:03:29,906:INFO:Initializing load_model()
2025-07-12 21:03:29,906:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 21:06:00,614:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:06:00,614:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:06:00,944:INFO:Initializing load_model()
2025-07-12 21:06:00,944:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 21:10:10,693:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:10:10,693:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:11:10,190:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:11:10,190:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:11:29,268:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:11:29,269:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:11:29,628:INFO:PyCaret RegressionExperiment
2025-07-12 21:11:29,628:INFO:Logging name: reg-default-name
2025-07-12 21:11:29,629:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:11:29,629:INFO:version 3.3.2
2025-07-12 21:11:29,629:INFO:Initializing setup()
2025-07-12 21:11:29,629:INFO:self.USI: 6504
2025-07-12 21:11:29,629:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:11:29,629:INFO:Checking environment
2025-07-12 21:11:29,629:INFO:python_version: 3.10.12
2025-07-12 21:11:29,629:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:11:29,629:INFO:machine: x86_64
2025-07-12 21:11:29,630:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:11:29,631:INFO:Memory: svmem(total=16094748672, available=9371475968, percent=41.8, used=6256488448, free=3328294912, active=7086329856, inactive=4059574272, buffers=410734592, cached=6099230720, shared=121061376, slab=635944960)
2025-07-12 21:11:29,631:INFO:Physical Core: 6
2025-07-12 21:11:29,631:INFO:Logical Core: 12
2025-07-12 21:11:29,631:INFO:Checking libraries
2025-07-12 21:11:29,632:INFO:System:
2025-07-12 21:11:29,632:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:11:29,632:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:11:29,632:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:11:29,632:INFO:PyCaret required dependencies:
2025-07-12 21:11:29,647:INFO:                 pip: 25.1.1
2025-07-12 21:11:29,647:INFO:          setuptools: 59.6.0
2025-07-12 21:11:29,647:INFO:             pycaret: 3.3.2
2025-07-12 21:11:29,648:INFO:             IPython: 8.37.0
2025-07-12 21:11:29,648:INFO:          ipywidgets: 8.1.7
2025-07-12 21:11:29,648:INFO:                tqdm: 4.67.1
2025-07-12 21:11:29,648:INFO:               numpy: 1.26.4
2025-07-12 21:11:29,648:INFO:              pandas: 2.1.4
2025-07-12 21:11:29,648:INFO:              jinja2: 3.1.6
2025-07-12 21:11:29,648:INFO:               scipy: 1.11.4
2025-07-12 21:11:29,648:INFO:              joblib: 1.3.2
2025-07-12 21:11:29,648:INFO:             sklearn: 1.4.2
2025-07-12 21:11:29,648:INFO:                pyod: 2.0.5
2025-07-12 21:11:29,648:INFO:            imblearn: 0.13.0
2025-07-12 21:11:29,648:INFO:   category_encoders: 2.7.0
2025-07-12 21:11:29,648:INFO:            lightgbm: 4.6.0
2025-07-12 21:11:29,648:INFO:               numba: 0.61.2
2025-07-12 21:11:29,648:INFO:            requests: 2.32.4
2025-07-12 21:11:29,648:INFO:          matplotlib: 3.7.5
2025-07-12 21:11:29,648:INFO:          scikitplot: 0.3.7
2025-07-12 21:11:29,648:INFO:         yellowbrick: 1.5
2025-07-12 21:11:29,648:INFO:              plotly: 5.24.1
2025-07-12 21:11:29,649:INFO:    plotly-resampler: Not installed
2025-07-12 21:11:29,649:INFO:             kaleido: 1.0.0
2025-07-12 21:11:29,649:INFO:           schemdraw: 0.15
2025-07-12 21:11:29,649:INFO:         statsmodels: 0.14.5
2025-07-12 21:11:29,649:INFO:              sktime: 0.26.0
2025-07-12 21:11:29,649:INFO:               tbats: 1.1.3
2025-07-12 21:11:29,649:INFO:            pmdarima: 2.0.4
2025-07-12 21:11:29,649:INFO:              psutil: 7.0.0
2025-07-12 21:11:29,649:INFO:          markupsafe: 3.0.2
2025-07-12 21:11:29,649:INFO:             pickle5: Not installed
2025-07-12 21:11:29,649:INFO:         cloudpickle: 3.1.1
2025-07-12 21:11:29,649:INFO:         deprecation: 2.1.0
2025-07-12 21:11:29,649:INFO:              xxhash: 3.5.0
2025-07-12 21:11:29,649:INFO:           wurlitzer: 3.1.1
2025-07-12 21:11:29,649:INFO:PyCaret optional dependencies:
2025-07-12 21:11:29,659:INFO:                shap: Not installed
2025-07-12 21:11:29,659:INFO:           interpret: Not installed
2025-07-12 21:11:29,659:INFO:                umap: Not installed
2025-07-12 21:11:29,659:INFO:     ydata_profiling: Not installed
2025-07-12 21:11:29,659:INFO:  explainerdashboard: Not installed
2025-07-12 21:11:29,659:INFO:             autoviz: Not installed
2025-07-12 21:11:29,659:INFO:           fairlearn: Not installed
2025-07-12 21:11:29,659:INFO:          deepchecks: Not installed
2025-07-12 21:11:29,659:INFO:             xgboost: Not installed
2025-07-12 21:11:29,660:INFO:            catboost: Not installed
2025-07-12 21:11:29,660:INFO:              kmodes: Not installed
2025-07-12 21:11:29,660:INFO:             mlxtend: Not installed
2025-07-12 21:11:29,660:INFO:       statsforecast: Not installed
2025-07-12 21:11:29,660:INFO:        tune_sklearn: Not installed
2025-07-12 21:11:29,660:INFO:                 ray: Not installed
2025-07-12 21:11:29,660:INFO:            hyperopt: Not installed
2025-07-12 21:11:29,660:INFO:              optuna: Not installed
2025-07-12 21:11:29,660:INFO:               skopt: Not installed
2025-07-12 21:11:29,660:INFO:              mlflow: Not installed
2025-07-12 21:11:29,660:INFO:              gradio: Not installed
2025-07-12 21:11:29,660:INFO:             fastapi: Not installed
2025-07-12 21:11:29,660:INFO:             uvicorn: Not installed
2025-07-12 21:11:29,660:INFO:              m2cgen: Not installed
2025-07-12 21:11:29,660:INFO:           evidently: Not installed
2025-07-12 21:11:29,660:INFO:               fugue: Not installed
2025-07-12 21:11:29,660:INFO:           streamlit: 1.46.1
2025-07-12 21:11:29,660:INFO:             prophet: Not installed
2025-07-12 21:11:29,660:INFO:None
2025-07-12 21:11:29,661:INFO:Set up data.
2025-07-12 21:11:29,683:INFO:Set up folding strategy.
2025-07-12 21:11:29,683:INFO:Set up train/test split.
2025-07-12 21:11:29,693:INFO:Set up index.
2025-07-12 21:11:29,693:INFO:Assigning column types.
2025-07-12 21:11:29,697:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:11:29,697:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,700:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,703:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,743:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,772:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,773:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,773:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,776:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,779:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,817:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,846:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,847:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,848:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:11:29,851:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,854:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,893:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,921:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,922:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,925:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,928:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,967:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,996:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:29,997:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:29,997:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:11:30,004:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,043:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,071:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,072:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,072:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,078:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,117:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,145:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,145:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,146:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,146:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:11:30,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,218:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,218:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,264:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,293:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,294:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,295:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:11:30,339:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,414:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:11:30,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,444:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,444:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:11:30,518:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,518:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,593:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,593:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:30,594:INFO:Preparing preprocessing pipeline...
2025-07-12 21:11:30,595:INFO:Set up simple imputation.
2025-07-12 21:11:30,598:INFO:Set up encoding of ordinal features.
2025-07-12 21:11:30,600:INFO:Set up encoding of categorical features.
2025-07-12 21:11:30,824:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:11:30,840:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer...
                                    transformer=OneHotEncoder(cols=['energy_certificate',
                                                                    'tipo_suelo',
                                                                    'estilo'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan')))])
2025-07-12 21:11:30,840:INFO:Creating final display dataframe.
2025-07-12 21:11:31,424:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 24)
4        Transformed data shape        (1159, 37)
5   Transformed train set shape         (811, 37)
6    Transformed test set shape         (348, 37)
7              Numeric features                14
8          Categorical features                 9
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              6504
2025-07-12 21:11:31,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:31,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:31,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:31,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:11:31,577:INFO:setup() successfully completed in 1.95s...............
2025-07-12 21:11:31,577:INFO:Initializing load_model()
2025-07-12 21:11:31,577:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 21:11:31,595:INFO:Initializing finalize_model()
2025-07-12 21:11:31,595:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc2af23940>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:11:31,595:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-07-12 21:11:31,598:INFO:Initializing create_model()
2025-07-12 21:11:31,598:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc2af23940>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:11:31,598:INFO:Checking exceptions
2025-07-12 21:11:31,599:INFO:Importing libraries
2025-07-12 21:11:31,599:INFO:Copying training dataset
2025-07-12 21:11:31,600:INFO:Defining folds
2025-07-12 21:11:31,600:INFO:Declaring metric variables
2025-07-12 21:11:31,600:INFO:Importing untrained model
2025-07-12 21:11:31,600:INFO:Declaring custom model
2025-07-12 21:11:31,600:INFO:Extra Trees Regressor Imported successfully
2025-07-12 21:11:31,602:INFO:Cross validation set to False
2025-07-12 21:11:31,602:INFO:Fitting Model
2025-07-12 21:11:31,773:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transform...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:11:31,773:INFO:create_model() successfully completed......................................
2025-07-12 21:11:31,949:INFO:_master_model_container: 0
2025-07-12 21:11:31,949:INFO:_display_container: 1
2025-07-12 21:11:31,966:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transform...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:11:31,966:INFO:finalize_model() successfully completed......................................
2025-07-12 21:11:32,153:INFO:Initializing predict_model()
2025-07-12 21:11:32,153:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc2af23940>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transform...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecd19480>)
2025-07-12 21:11:32,153:INFO:Checking exceptions
2025-07-12 21:11:32,154:INFO:Preloading libraries
2025-07-12 21:11:32,154:INFO:Set up data.
2025-07-12 21:11:32,157:INFO:Set up index.
2025-07-12 21:12:07,438:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:12:07,438:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:12:07,805:INFO:PyCaret RegressionExperiment
2025-07-12 21:12:07,805:INFO:Logging name: reg-default-name
2025-07-12 21:12:07,805:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:12:07,805:INFO:version 3.3.2
2025-07-12 21:12:07,805:INFO:Initializing setup()
2025-07-12 21:12:07,805:INFO:self.USI: 9abc
2025-07-12 21:12:07,805:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:12:07,806:INFO:Checking environment
2025-07-12 21:12:07,806:INFO:python_version: 3.10.12
2025-07-12 21:12:07,806:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:12:07,806:INFO:machine: x86_64
2025-07-12 21:12:07,806:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:12:07,806:INFO:Memory: svmem(total=16094748672, available=9284149248, percent=42.3, used=6319529984, free=3240882176, active=7179673600, inactive=4059381760, buffers=410935296, cached=6123401216, shared=145346560, slab=636182528)
2025-07-12 21:12:07,806:INFO:Physical Core: 6
2025-07-12 21:12:07,806:INFO:Logical Core: 12
2025-07-12 21:12:07,807:INFO:Checking libraries
2025-07-12 21:12:07,807:INFO:System:
2025-07-12 21:12:07,807:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:12:07,807:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:12:07,807:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:12:07,807:INFO:PyCaret required dependencies:
2025-07-12 21:12:07,807:INFO:                 pip: 25.1.1
2025-07-12 21:12:07,807:INFO:          setuptools: 59.6.0
2025-07-12 21:12:07,807:INFO:             pycaret: 3.3.2
2025-07-12 21:12:07,807:INFO:             IPython: 8.37.0
2025-07-12 21:12:07,807:INFO:          ipywidgets: 8.1.7
2025-07-12 21:12:07,807:INFO:                tqdm: 4.67.1
2025-07-12 21:12:07,807:INFO:               numpy: 1.26.4
2025-07-12 21:12:07,807:INFO:              pandas: 2.1.4
2025-07-12 21:12:07,807:INFO:              jinja2: 3.1.6
2025-07-12 21:12:07,807:INFO:               scipy: 1.11.4
2025-07-12 21:12:07,808:INFO:              joblib: 1.3.2
2025-07-12 21:12:07,808:INFO:             sklearn: 1.4.2
2025-07-12 21:12:07,808:INFO:                pyod: 2.0.5
2025-07-12 21:12:07,808:INFO:            imblearn: 0.13.0
2025-07-12 21:12:07,808:INFO:   category_encoders: 2.7.0
2025-07-12 21:12:07,808:INFO:            lightgbm: 4.6.0
2025-07-12 21:12:07,808:INFO:               numba: 0.61.2
2025-07-12 21:12:07,808:INFO:            requests: 2.32.4
2025-07-12 21:12:07,808:INFO:          matplotlib: 3.7.5
2025-07-12 21:12:07,808:INFO:          scikitplot: 0.3.7
2025-07-12 21:12:07,808:INFO:         yellowbrick: 1.5
2025-07-12 21:12:07,808:INFO:              plotly: 5.24.1
2025-07-12 21:12:07,808:INFO:    plotly-resampler: Not installed
2025-07-12 21:12:07,808:INFO:             kaleido: 1.0.0
2025-07-12 21:12:07,808:INFO:           schemdraw: 0.15
2025-07-12 21:12:07,808:INFO:         statsmodels: 0.14.5
2025-07-12 21:12:07,808:INFO:              sktime: 0.26.0
2025-07-12 21:12:07,808:INFO:               tbats: 1.1.3
2025-07-12 21:12:07,808:INFO:            pmdarima: 2.0.4
2025-07-12 21:12:07,808:INFO:              psutil: 7.0.0
2025-07-12 21:12:07,808:INFO:          markupsafe: 3.0.2
2025-07-12 21:12:07,808:INFO:             pickle5: Not installed
2025-07-12 21:12:07,809:INFO:         cloudpickle: 3.1.1
2025-07-12 21:12:07,809:INFO:         deprecation: 2.1.0
2025-07-12 21:12:07,809:INFO:              xxhash: 3.5.0
2025-07-12 21:12:07,809:INFO:           wurlitzer: 3.1.1
2025-07-12 21:12:07,809:INFO:PyCaret optional dependencies:
2025-07-12 21:12:07,809:INFO:                shap: Not installed
2025-07-12 21:12:07,809:INFO:           interpret: Not installed
2025-07-12 21:12:07,809:INFO:                umap: Not installed
2025-07-12 21:12:07,809:INFO:     ydata_profiling: Not installed
2025-07-12 21:12:07,809:INFO:  explainerdashboard: Not installed
2025-07-12 21:12:07,809:INFO:             autoviz: Not installed
2025-07-12 21:12:07,809:INFO:           fairlearn: Not installed
2025-07-12 21:12:07,809:INFO:          deepchecks: Not installed
2025-07-12 21:12:07,809:INFO:             xgboost: Not installed
2025-07-12 21:12:07,809:INFO:            catboost: Not installed
2025-07-12 21:12:07,809:INFO:              kmodes: Not installed
2025-07-12 21:12:07,809:INFO:             mlxtend: Not installed
2025-07-12 21:12:07,809:INFO:       statsforecast: Not installed
2025-07-12 21:12:07,809:INFO:        tune_sklearn: Not installed
2025-07-12 21:12:07,809:INFO:                 ray: Not installed
2025-07-12 21:12:07,809:INFO:            hyperopt: Not installed
2025-07-12 21:12:07,809:INFO:              optuna: Not installed
2025-07-12 21:12:07,809:INFO:               skopt: Not installed
2025-07-12 21:12:07,809:INFO:              mlflow: Not installed
2025-07-12 21:12:07,809:INFO:              gradio: Not installed
2025-07-12 21:12:07,809:INFO:             fastapi: Not installed
2025-07-12 21:12:07,809:INFO:             uvicorn: Not installed
2025-07-12 21:12:07,809:INFO:              m2cgen: Not installed
2025-07-12 21:12:07,809:INFO:           evidently: Not installed
2025-07-12 21:12:07,810:INFO:               fugue: Not installed
2025-07-12 21:12:07,810:INFO:           streamlit: 1.46.1
2025-07-12 21:12:07,810:INFO:             prophet: Not installed
2025-07-12 21:12:07,810:INFO:None
2025-07-12 21:12:07,810:INFO:Set up data.
2025-07-12 21:12:07,831:INFO:Set up folding strategy.
2025-07-12 21:12:07,831:INFO:Set up train/test split.
2025-07-12 21:12:07,839:INFO:Set up index.
2025-07-12 21:12:07,839:INFO:Assigning column types.
2025-07-12 21:12:07,843:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:12:07,843:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,846:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,849:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,887:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,915:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,915:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:07,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:07,916:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,919:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,922:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,990:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,990:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:07,990:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:07,991:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:12:07,994:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:12:07,997:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,038:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,067:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,067:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,070:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,073:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,140:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,140:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,141:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,141:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:12:08,147:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,185:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,213:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,213:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,213:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,219:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,258:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,287:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,288:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:12:08,333:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,405:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,434:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,435:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:12:08,479:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,507:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,551:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:12:08,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,580:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:12:08,652:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,726:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,726:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:08,727:INFO:Preparing preprocessing pipeline...
2025-07-12 21:12:08,727:INFO:Set up simple imputation.
2025-07-12 21:12:08,734:INFO:Set up encoding of ordinal features.
2025-07-12 21:12:08,736:INFO:Set up encoding of categorical features.
2025-07-12 21:12:08,954:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:12:08,971:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer...
                                    transformer=OneHotEncoder(cols=['energy_certificate',
                                                                    'tipo_suelo',
                                                                    'estilo'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan')))])
2025-07-12 21:12:08,971:INFO:Creating final display dataframe.
2025-07-12 21:12:09,184:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 24)
4        Transformed data shape        (1159, 37)
5   Transformed train set shape         (811, 37)
6    Transformed test set shape         (348, 37)
7              Numeric features                14
8          Categorical features                 9
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              9abc
2025-07-12 21:12:09,260:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:09,260:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:09,333:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:09,333:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:12:09,333:INFO:setup() successfully completed in 1.53s...............
2025-07-12 21:12:09,333:INFO:Initializing load_model()
2025-07-12 21:12:09,334:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 21:12:09,351:INFO:Initializing finalize_model()
2025-07-12 21:12:09,351:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaec69f9a0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:12:09,351:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-07-12 21:12:09,353:INFO:Initializing create_model()
2025-07-12 21:12:09,354:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaec69f9a0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:12:09,354:INFO:Checking exceptions
2025-07-12 21:12:09,354:INFO:Importing libraries
2025-07-12 21:12:09,354:INFO:Copying training dataset
2025-07-12 21:12:09,355:INFO:Defining folds
2025-07-12 21:12:09,355:INFO:Declaring metric variables
2025-07-12 21:12:09,355:INFO:Importing untrained model
2025-07-12 21:12:09,355:INFO:Declaring custom model
2025-07-12 21:12:09,355:INFO:Extra Trees Regressor Imported successfully
2025-07-12 21:12:09,357:INFO:Cross validation set to False
2025-07-12 21:12:09,357:INFO:Fitting Model
2025-07-12 21:12:09,521:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transform...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:12:09,521:INFO:create_model() successfully completed......................................
2025-07-12 21:12:09,696:INFO:_master_model_container: 0
2025-07-12 21:12:09,696:INFO:_display_container: 1
2025-07-12 21:12:09,712:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'property_id',
                                             'neighborhood', 'exterior',
                                             'ascensor', 'altura_techo',
                                             'dist_metro_m',
                                             'aire_acondicionado',
                                             'reformado_bin'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 Transform...
                                                              use_cat_names=True))),
                ('rest_encoding',
                 TransformerWrapper(include=['address', 'agency_name',
                                             'property_description',
                                             'property_images',
                                             'property_title'],
                                    transformer=TargetEncoder(cols=['address',
                                                                    'agency_name',
                                                                    'property_description',
                                                                    'property_images',
                                                                    'property_title'],
                                                              handle_missing='return_nan'))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:12:09,712:INFO:finalize_model() successfully completed......................................
2025-07-12 21:14:04,734:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:14:04,734:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:14:05,095:INFO:PyCaret RegressionExperiment
2025-07-12 21:14:05,095:INFO:Logging name: reg-default-name
2025-07-12 21:14:05,095:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:14:05,095:INFO:version 3.3.2
2025-07-12 21:14:05,095:INFO:Initializing setup()
2025-07-12 21:14:05,095:INFO:self.USI: 9d7c
2025-07-12 21:14:05,096:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:14:05,096:INFO:Checking environment
2025-07-12 21:14:05,096:INFO:python_version: 3.10.12
2025-07-12 21:14:05,096:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:14:05,096:INFO:machine: x86_64
2025-07-12 21:14:05,096:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:14:05,096:INFO:Memory: svmem(total=16094748672, available=9242714112, percent=42.6, used=6385582080, free=3196559360, active=7182827520, inactive=4062146560, buffers=411475968, cached=6101131264, shared=120729600, slab=636661760)
2025-07-12 21:14:05,096:INFO:Physical Core: 6
2025-07-12 21:14:05,097:INFO:Logical Core: 12
2025-07-12 21:14:05,097:INFO:Checking libraries
2025-07-12 21:14:05,097:INFO:System:
2025-07-12 21:14:05,097:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:14:05,097:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:14:05,097:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:14:05,097:INFO:PyCaret required dependencies:
2025-07-12 21:14:05,097:INFO:                 pip: 25.1.1
2025-07-12 21:14:05,097:INFO:          setuptools: 59.6.0
2025-07-12 21:14:05,097:INFO:             pycaret: 3.3.2
2025-07-12 21:14:05,097:INFO:             IPython: 8.37.0
2025-07-12 21:14:05,097:INFO:          ipywidgets: 8.1.7
2025-07-12 21:14:05,097:INFO:                tqdm: 4.67.1
2025-07-12 21:14:05,097:INFO:               numpy: 1.26.4
2025-07-12 21:14:05,097:INFO:              pandas: 2.1.4
2025-07-12 21:14:05,097:INFO:              jinja2: 3.1.6
2025-07-12 21:14:05,097:INFO:               scipy: 1.11.4
2025-07-12 21:14:05,097:INFO:              joblib: 1.3.2
2025-07-12 21:14:05,097:INFO:             sklearn: 1.4.2
2025-07-12 21:14:05,097:INFO:                pyod: 2.0.5
2025-07-12 21:14:05,097:INFO:            imblearn: 0.13.0
2025-07-12 21:14:05,097:INFO:   category_encoders: 2.7.0
2025-07-12 21:14:05,097:INFO:            lightgbm: 4.6.0
2025-07-12 21:14:05,097:INFO:               numba: 0.61.2
2025-07-12 21:14:05,097:INFO:            requests: 2.32.4
2025-07-12 21:14:05,098:INFO:          matplotlib: 3.7.5
2025-07-12 21:14:05,098:INFO:          scikitplot: 0.3.7
2025-07-12 21:14:05,098:INFO:         yellowbrick: 1.5
2025-07-12 21:14:05,098:INFO:              plotly: 5.24.1
2025-07-12 21:14:05,098:INFO:    plotly-resampler: Not installed
2025-07-12 21:14:05,098:INFO:             kaleido: 1.0.0
2025-07-12 21:14:05,098:INFO:           schemdraw: 0.15
2025-07-12 21:14:05,098:INFO:         statsmodels: 0.14.5
2025-07-12 21:14:05,098:INFO:              sktime: 0.26.0
2025-07-12 21:14:05,098:INFO:               tbats: 1.1.3
2025-07-12 21:14:05,098:INFO:            pmdarima: 2.0.4
2025-07-12 21:14:05,098:INFO:              psutil: 7.0.0
2025-07-12 21:14:05,098:INFO:          markupsafe: 3.0.2
2025-07-12 21:14:05,098:INFO:             pickle5: Not installed
2025-07-12 21:14:05,098:INFO:         cloudpickle: 3.1.1
2025-07-12 21:14:05,098:INFO:         deprecation: 2.1.0
2025-07-12 21:14:05,098:INFO:              xxhash: 3.5.0
2025-07-12 21:14:05,098:INFO:           wurlitzer: 3.1.1
2025-07-12 21:14:05,098:INFO:PyCaret optional dependencies:
2025-07-12 21:14:05,098:INFO:                shap: Not installed
2025-07-12 21:14:05,098:INFO:           interpret: Not installed
2025-07-12 21:14:05,098:INFO:                umap: Not installed
2025-07-12 21:14:05,098:INFO:     ydata_profiling: Not installed
2025-07-12 21:14:05,099:INFO:  explainerdashboard: Not installed
2025-07-12 21:14:05,099:INFO:             autoviz: Not installed
2025-07-12 21:14:05,099:INFO:           fairlearn: Not installed
2025-07-12 21:14:05,099:INFO:          deepchecks: Not installed
2025-07-12 21:14:05,099:INFO:             xgboost: Not installed
2025-07-12 21:14:05,099:INFO:            catboost: Not installed
2025-07-12 21:14:05,099:INFO:              kmodes: Not installed
2025-07-12 21:14:05,099:INFO:             mlxtend: Not installed
2025-07-12 21:14:05,099:INFO:       statsforecast: Not installed
2025-07-12 21:14:05,099:INFO:        tune_sklearn: Not installed
2025-07-12 21:14:05,099:INFO:                 ray: Not installed
2025-07-12 21:14:05,099:INFO:            hyperopt: Not installed
2025-07-12 21:14:05,099:INFO:              optuna: Not installed
2025-07-12 21:14:05,099:INFO:               skopt: Not installed
2025-07-12 21:14:05,099:INFO:              mlflow: Not installed
2025-07-12 21:14:05,099:INFO:              gradio: Not installed
2025-07-12 21:14:05,099:INFO:             fastapi: Not installed
2025-07-12 21:14:05,099:INFO:             uvicorn: Not installed
2025-07-12 21:14:05,099:INFO:              m2cgen: Not installed
2025-07-12 21:14:05,099:INFO:           evidently: Not installed
2025-07-12 21:14:05,099:INFO:               fugue: Not installed
2025-07-12 21:14:05,099:INFO:           streamlit: 1.46.1
2025-07-12 21:14:05,099:INFO:             prophet: Not installed
2025-07-12 21:14:05,099:INFO:None
2025-07-12 21:14:05,099:INFO:Set up data.
2025-07-12 21:14:05,103:INFO:Set up folding strategy.
2025-07-12 21:14:05,103:INFO:Set up train/test split.
2025-07-12 21:14:05,106:INFO:Set up index.
2025-07-12 21:14:05,106:INFO:Assigning column types.
2025-07-12 21:14:05,108:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:14:05,109:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,112:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,115:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,151:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,180:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,181:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,181:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,184:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,187:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,225:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,253:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,254:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,255:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:14:05,258:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,261:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,298:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,326:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,327:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,330:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,333:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,399:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,400:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:14:05,406:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,472:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,473:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,473:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,479:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,546:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,547:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,547:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,547:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:14:05,593:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,622:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,668:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,696:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,697:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,697:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:14:05,740:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,769:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,816:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:14:05,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,846:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:14:05,920:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,920:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,994:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:05,995:INFO:Preparing preprocessing pipeline...
2025-07-12 21:14:05,995:INFO:Set up simple imputation.
2025-07-12 21:14:05,998:INFO:Set up encoding of ordinal features.
2025-07-12 21:14:05,999:INFO:Set up encoding of categorical features.
2025-07-12 21:14:06,038:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:14:06,053:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neig...
                 TransformerWrapper(include=['property_type'],
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-07-12 21:14:06,053:INFO:Creating final display dataframe.
2025-07-12 21:14:06,190:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 13)
4        Transformed data shape        (1159, 16)
5   Transformed train set shape         (811, 16)
6    Transformed test set shape         (348, 16)
7              Numeric features                10
8          Categorical features                 2
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              9d7c
2025-07-12 21:14:06,265:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:06,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:06,339:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:06,339:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:14:06,340:INFO:setup() successfully completed in 1.25s...............
2025-07-12 21:14:06,340:INFO:Initializing load_model()
2025-07-12 21:14:06,340:INFO:load_model(model_name=modelos/modelo_chamberi, platform=None, authentication=None, verbose=True)
2025-07-12 21:14:06,357:INFO:Initializing finalize_model()
2025-07-12 21:14:06,358:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae419ba00>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:14:06,358:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-07-12 21:14:06,360:INFO:Initializing create_model()
2025-07-12 21:14:06,361:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae419ba00>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:14:06,361:INFO:Checking exceptions
2025-07-12 21:14:06,361:INFO:Importing libraries
2025-07-12 21:14:06,361:INFO:Copying training dataset
2025-07-12 21:14:06,362:INFO:Defining folds
2025-07-12 21:14:06,362:INFO:Declaring metric variables
2025-07-12 21:14:06,362:INFO:Importing untrained model
2025-07-12 21:14:06,362:INFO:Declaring custom model
2025-07-12 21:14:06,363:INFO:Extra Trees Regressor Imported successfully
2025-07-12 21:14:06,363:INFO:Cross validation set to False
2025-07-12 21:14:06,363:INFO:Fitting Model
2025-07-12 21:14:06,470:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:14:06,470:INFO:create_model() successfully completed......................................
2025-07-12 21:14:06,645:INFO:_master_model_container: 0
2025-07-12 21:14:06,645:INFO:_display_container: 1
2025-07-12 21:14:06,659:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:14:06,659:INFO:finalize_model() successfully completed......................................
2025-07-12 21:14:06,841:INFO:Initializing predict_model()
2025-07-12 21:14:06,841:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae419ba00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaec9491b0>)
2025-07-12 21:14:06,841:INFO:Checking exceptions
2025-07-12 21:14:06,842:INFO:Preloading libraries
2025-07-12 21:14:06,842:INFO:Set up data.
2025-07-12 21:14:06,844:INFO:Set up index.
2025-07-12 21:15:13,162:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:15:13,162:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:15:13,526:INFO:Initializing predict_model()
2025-07-12 21:15:13,527:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae419ba00>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaec94a8c0>)
2025-07-12 21:15:13,527:INFO:Checking exceptions
2025-07-12 21:15:13,527:INFO:Preloading libraries
2025-07-12 21:15:13,528:INFO:Set up data.
2025-07-12 21:15:13,530:INFO:Set up index.
2025-07-12 21:15:28,343:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:15:28,343:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:15:28,734:INFO:PyCaret RegressionExperiment
2025-07-12 21:15:28,734:INFO:Logging name: reg-default-name
2025-07-12 21:15:28,734:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:15:28,734:INFO:version 3.3.2
2025-07-12 21:15:28,734:INFO:Initializing setup()
2025-07-12 21:15:28,734:INFO:self.USI: 25c1
2025-07-12 21:15:28,734:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:15:28,734:INFO:Checking environment
2025-07-12 21:15:28,734:INFO:python_version: 3.10.12
2025-07-12 21:15:28,735:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:15:28,735:INFO:machine: x86_64
2025-07-12 21:15:28,735:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:15:28,735:INFO:Memory: svmem(total=16094748672, available=9088278528, percent=43.5, used=6531530752, free=3040911360, active=7340875776, inactive=4061749248, buffers=411930624, cached=6110375936, shared=129204224, slab=641122304)
2025-07-12 21:15:28,735:INFO:Physical Core: 6
2025-07-12 21:15:28,735:INFO:Logical Core: 12
2025-07-12 21:15:28,736:INFO:Checking libraries
2025-07-12 21:15:28,736:INFO:System:
2025-07-12 21:15:28,736:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:15:28,736:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:15:28,736:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:15:28,736:INFO:PyCaret required dependencies:
2025-07-12 21:15:28,736:INFO:                 pip: 25.1.1
2025-07-12 21:15:28,736:INFO:          setuptools: 59.6.0
2025-07-12 21:15:28,736:INFO:             pycaret: 3.3.2
2025-07-12 21:15:28,736:INFO:             IPython: 8.37.0
2025-07-12 21:15:28,736:INFO:          ipywidgets: 8.1.7
2025-07-12 21:15:28,736:INFO:                tqdm: 4.67.1
2025-07-12 21:15:28,736:INFO:               numpy: 1.26.4
2025-07-12 21:15:28,736:INFO:              pandas: 2.1.4
2025-07-12 21:15:28,736:INFO:              jinja2: 3.1.6
2025-07-12 21:15:28,736:INFO:               scipy: 1.11.4
2025-07-12 21:15:28,736:INFO:              joblib: 1.3.2
2025-07-12 21:15:28,736:INFO:             sklearn: 1.4.2
2025-07-12 21:15:28,736:INFO:                pyod: 2.0.5
2025-07-12 21:15:28,736:INFO:            imblearn: 0.13.0
2025-07-12 21:15:28,737:INFO:   category_encoders: 2.7.0
2025-07-12 21:15:28,737:INFO:            lightgbm: 4.6.0
2025-07-12 21:15:28,737:INFO:               numba: 0.61.2
2025-07-12 21:15:28,737:INFO:            requests: 2.32.4
2025-07-12 21:15:28,737:INFO:          matplotlib: 3.7.5
2025-07-12 21:15:28,737:INFO:          scikitplot: 0.3.7
2025-07-12 21:15:28,737:INFO:         yellowbrick: 1.5
2025-07-12 21:15:28,737:INFO:              plotly: 5.24.1
2025-07-12 21:15:28,737:INFO:    plotly-resampler: Not installed
2025-07-12 21:15:28,737:INFO:             kaleido: 1.0.0
2025-07-12 21:15:28,737:INFO:           schemdraw: 0.15
2025-07-12 21:15:28,737:INFO:         statsmodels: 0.14.5
2025-07-12 21:15:28,737:INFO:              sktime: 0.26.0
2025-07-12 21:15:28,737:INFO:               tbats: 1.1.3
2025-07-12 21:15:28,737:INFO:            pmdarima: 2.0.4
2025-07-12 21:15:28,737:INFO:              psutil: 7.0.0
2025-07-12 21:15:28,737:INFO:          markupsafe: 3.0.2
2025-07-12 21:15:28,737:INFO:             pickle5: Not installed
2025-07-12 21:15:28,737:INFO:         cloudpickle: 3.1.1
2025-07-12 21:15:28,738:INFO:         deprecation: 2.1.0
2025-07-12 21:15:28,738:INFO:              xxhash: 3.5.0
2025-07-12 21:15:28,738:INFO:           wurlitzer: 3.1.1
2025-07-12 21:15:28,738:INFO:PyCaret optional dependencies:
2025-07-12 21:15:28,738:INFO:                shap: Not installed
2025-07-12 21:15:28,738:INFO:           interpret: Not installed
2025-07-12 21:15:28,738:INFO:                umap: Not installed
2025-07-12 21:15:28,738:INFO:     ydata_profiling: Not installed
2025-07-12 21:15:28,738:INFO:  explainerdashboard: Not installed
2025-07-12 21:15:28,738:INFO:             autoviz: Not installed
2025-07-12 21:15:28,738:INFO:           fairlearn: Not installed
2025-07-12 21:15:28,738:INFO:          deepchecks: Not installed
2025-07-12 21:15:28,738:INFO:             xgboost: Not installed
2025-07-12 21:15:28,738:INFO:            catboost: Not installed
2025-07-12 21:15:28,738:INFO:              kmodes: Not installed
2025-07-12 21:15:28,738:INFO:             mlxtend: Not installed
2025-07-12 21:15:28,738:INFO:       statsforecast: Not installed
2025-07-12 21:15:28,738:INFO:        tune_sklearn: Not installed
2025-07-12 21:15:28,738:INFO:                 ray: Not installed
2025-07-12 21:15:28,738:INFO:            hyperopt: Not installed
2025-07-12 21:15:28,739:INFO:              optuna: Not installed
2025-07-12 21:15:28,739:INFO:               skopt: Not installed
2025-07-12 21:15:28,739:INFO:              mlflow: Not installed
2025-07-12 21:15:28,739:INFO:              gradio: Not installed
2025-07-12 21:15:28,739:INFO:             fastapi: Not installed
2025-07-12 21:15:28,739:INFO:             uvicorn: Not installed
2025-07-12 21:15:28,739:INFO:              m2cgen: Not installed
2025-07-12 21:15:28,739:INFO:           evidently: Not installed
2025-07-12 21:15:28,739:INFO:               fugue: Not installed
2025-07-12 21:15:28,739:INFO:           streamlit: 1.46.1
2025-07-12 21:15:28,739:INFO:             prophet: Not installed
2025-07-12 21:15:28,739:INFO:None
2025-07-12 21:15:28,739:INFO:Set up data.
2025-07-12 21:15:28,743:INFO:Set up folding strategy.
2025-07-12 21:15:28,743:INFO:Set up train/test split.
2025-07-12 21:15:28,746:INFO:Set up index.
2025-07-12 21:15:28,746:INFO:Assigning column types.
2025-07-12 21:15:28,749:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:15:28,749:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,752:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,755:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,791:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,819:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,820:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,820:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,823:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,826:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,862:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,890:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,890:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,891:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,891:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:15:28,894:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,897:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,961:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,962:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,962:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:28,965:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:15:28,968:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,005:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,033:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,033:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,033:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,034:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:15:29,039:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,103:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,104:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,104:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,110:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,146:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,173:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,174:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,174:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,174:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:15:29,216:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,243:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,244:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,286:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,314:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,315:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,315:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:15:29,357:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,385:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,385:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,427:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:15:29,455:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,455:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,455:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:15:29,529:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,601:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,602:INFO:Preparing preprocessing pipeline...
2025-07-12 21:15:29,602:INFO:Set up simple imputation.
2025-07-12 21:15:29,604:INFO:Set up encoding of ordinal features.
2025-07-12 21:15:29,605:INFO:Set up encoding of categorical features.
2025-07-12 21:15:29,645:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:15:29,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neig...
                 TransformerWrapper(include=['property_type'],
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-07-12 21:15:29,658:INFO:Creating final display dataframe.
2025-07-12 21:15:29,786:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 13)
4        Transformed data shape        (1159, 16)
5   Transformed train set shape         (811, 16)
6    Transformed test set shape         (348, 16)
7              Numeric features                10
8          Categorical features                 2
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              25c1
2025-07-12 21:15:29,857:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,857:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,928:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,928:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:15:29,929:INFO:setup() successfully completed in 1.2s...............
2025-07-12 21:15:29,929:INFO:Initializing load_model()
2025-07-12 21:15:29,929:INFO:load_model(model_name=modelos/modelo_arganzuela, platform=None, authentication=None, verbose=True)
2025-07-12 21:15:29,930:INFO:Initializing finalize_model()
2025-07-12 21:15:29,930:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=HuberRegressor(), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:15:29,930:INFO:Finalizing HuberRegressor()
2025-07-12 21:15:29,932:INFO:Initializing create_model()
2025-07-12 21:15:29,932:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=HuberRegressor(), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:15:29,933:INFO:Checking exceptions
2025-07-12 21:15:29,933:INFO:Importing libraries
2025-07-12 21:15:29,933:INFO:Copying training dataset
2025-07-12 21:15:29,934:INFO:Defining folds
2025-07-12 21:15:29,934:INFO:Declaring metric variables
2025-07-12 21:15:29,934:INFO:Importing untrained model
2025-07-12 21:15:29,934:INFO:Declaring custom model
2025-07-12 21:15:29,934:INFO:Huber Regressor Imported successfully
2025-07-12 21:15:29,935:INFO:Cross validation set to False
2025-07-12 21:15:29,935:INFO:Fitting Model
2025-07-12 21:15:29,987:WARNING:ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html

2025-07-12 21:15:30,006:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())])
2025-07-12 21:15:30,006:INFO:create_model() successfully completed......................................
2025-07-12 21:15:30,186:INFO:_master_model_container: 0
2025-07-12 21:15:30,186:INFO:_display_container: 1
2025-07-12 21:15:30,199:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())])
2025-07-12 21:15:30,200:INFO:finalize_model() successfully completed......................................
2025-07-12 21:15:30,383:INFO:Initializing predict_model()
2025-07-12 21:15:30,383:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdebf40>)
2025-07-12 21:15:30,383:INFO:Checking exceptions
2025-07-12 21:15:30,383:INFO:Preloading libraries
2025-07-12 21:15:30,384:INFO:Set up data.
2025-07-12 21:15:30,386:INFO:Set up index.
2025-07-12 21:20:00,953:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:20:00,953:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:20:01,473:INFO:Initializing predict_model()
2025-07-12 21:20:01,473:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdeb400>)
2025-07-12 21:20:01,473:INFO:Checking exceptions
2025-07-12 21:20:01,473:INFO:Preloading libraries
2025-07-12 21:20:01,474:INFO:Set up data.
2025-07-12 21:20:01,477:INFO:Set up index.
2025-07-12 21:20:14,297:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:20:14,297:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:20:14,579:INFO:Initializing predict_model()
2025-07-12 21:20:14,579:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdead40>)
2025-07-12 21:20:14,579:INFO:Checking exceptions
2025-07-12 21:20:14,579:INFO:Preloading libraries
2025-07-12 21:20:14,579:INFO:Set up data.
2025-07-12 21:20:14,582:INFO:Set up index.
2025-07-12 21:24:43,090:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:24:43,090:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:24:43,560:INFO:Initializing predict_model()
2025-07-12 21:24:43,560:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea950>)
2025-07-12 21:24:43,561:INFO:Checking exceptions
2025-07-12 21:24:43,561:INFO:Preloading libraries
2025-07-12 21:24:43,561:INFO:Set up data.
2025-07-12 21:24:43,564:INFO:Set up index.
2025-07-12 21:25:09,946:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:25:09,946:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:25:10,379:INFO:Initializing predict_model()
2025-07-12 21:25:10,379:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea4d0>)
2025-07-12 21:25:10,380:INFO:Checking exceptions
2025-07-12 21:25:10,380:INFO:Preloading libraries
2025-07-12 21:25:10,380:INFO:Set up data.
2025-07-12 21:25:10,383:INFO:Set up index.
2025-07-12 21:25:57,857:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:25:57,857:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:25:58,266:INFO:Initializing predict_model()
2025-07-12 21:25:58,266:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecde9510>)
2025-07-12 21:25:58,266:INFO:Checking exceptions
2025-07-12 21:25:58,266:INFO:Preloading libraries
2025-07-12 21:25:58,267:INFO:Set up data.
2025-07-12 21:25:58,269:INFO:Set up index.
2025-07-12 21:26:13,834:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:26:13,834:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:26:14,253:INFO:Initializing predict_model()
2025-07-12 21:26:14,254:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea3b0>)
2025-07-12 21:26:14,254:INFO:Checking exceptions
2025-07-12 21:26:14,254:INFO:Preloading libraries
2025-07-12 21:26:14,255:INFO:Set up data.
2025-07-12 21:26:14,257:INFO:Set up index.
2025-07-12 21:26:40,747:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:26:40,747:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:26:41,162:INFO:Initializing predict_model()
2025-07-12 21:26:41,162:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdeb370>)
2025-07-12 21:26:41,162:INFO:Checking exceptions
2025-07-12 21:26:41,163:INFO:Preloading libraries
2025-07-12 21:26:41,163:INFO:Set up data.
2025-07-12 21:26:41,165:INFO:Set up index.
2025-07-12 21:26:51,979:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:26:51,979:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:26:52,394:INFO:Initializing predict_model()
2025-07-12 21:26:52,395:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdeab90>)
2025-07-12 21:26:52,395:INFO:Checking exceptions
2025-07-12 21:26:52,395:INFO:Preloading libraries
2025-07-12 21:26:52,395:INFO:Set up data.
2025-07-12 21:26:52,398:INFO:Set up index.
2025-07-12 21:27:37,842:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:27:37,842:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:27:38,264:INFO:Initializing predict_model()
2025-07-12 21:27:38,264:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea4d0>)
2025-07-12 21:27:38,264:INFO:Checking exceptions
2025-07-12 21:27:38,264:INFO:Preloading libraries
2025-07-12 21:27:38,265:INFO:Set up data.
2025-07-12 21:27:38,267:INFO:Set up index.
2025-07-12 21:27:56,083:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:27:56,084:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:27:56,494:INFO:Initializing predict_model()
2025-07-12 21:27:56,495:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecde9e10>)
2025-07-12 21:27:56,495:INFO:Checking exceptions
2025-07-12 21:27:56,495:INFO:Preloading libraries
2025-07-12 21:27:56,495:INFO:Set up data.
2025-07-12 21:27:56,498:INFO:Set up index.
2025-07-12 21:28:18,178:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:28:18,178:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:28:18,608:INFO:Initializing predict_model()
2025-07-12 21:28:18,608:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea3b0>)
2025-07-12 21:28:18,608:INFO:Checking exceptions
2025-07-12 21:28:18,608:INFO:Preloading libraries
2025-07-12 21:28:18,609:INFO:Set up data.
2025-07-12 21:28:18,612:INFO:Set up index.
2025-07-12 21:28:32,467:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:28:32,467:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:28:32,895:INFO:Initializing predict_model()
2025-07-12 21:28:32,895:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdebbe0>)
2025-07-12 21:28:32,896:INFO:Checking exceptions
2025-07-12 21:28:32,896:INFO:Preloading libraries
2025-07-12 21:28:32,896:INFO:Set up data.
2025-07-12 21:28:32,899:INFO:Set up index.
2025-07-12 21:30:20,260:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:30:20,260:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:30:20,676:INFO:Initializing predict_model()
2025-07-12 21:30:20,677:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdeb1c0>)
2025-07-12 21:30:20,677:INFO:Checking exceptions
2025-07-12 21:30:20,677:INFO:Preloading libraries
2025-07-12 21:30:20,677:INFO:Set up data.
2025-07-12 21:30:20,680:INFO:Set up index.
2025-07-12 21:30:34,802:WARNING:UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.

2025-07-12 21:30:34,802:WARNING:UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=None`.

2025-07-12 21:30:35,233:INFO:Initializing predict_model()
2025-07-12 21:30:35,233:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abc39c2eef0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator', HuberRegressor())]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecdea4d0>)
2025-07-12 21:30:35,233:INFO:Checking exceptions
2025-07-12 21:30:35,233:INFO:Preloading libraries
2025-07-12 21:30:35,234:INFO:Set up data.
2025-07-12 21:30:35,236:INFO:Set up index.
2025-07-12 21:38:35,881:INFO:PyCaret RegressionExperiment
2025-07-12 21:38:35,881:INFO:Logging name: reg-default-name
2025-07-12 21:38:35,881:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:38:35,881:INFO:version 3.3.2
2025-07-12 21:38:35,881:INFO:Initializing setup()
2025-07-12 21:38:35,881:INFO:self.USI: 3fb5
2025-07-12 21:38:35,882:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:38:35,882:INFO:Checking environment
2025-07-12 21:38:35,882:INFO:python_version: 3.10.12
2025-07-12 21:38:35,882:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:38:35,882:INFO:machine: x86_64
2025-07-12 21:38:35,882:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:38:35,882:INFO:Memory: svmem(total=16094748672, available=8996409344, percent=44.1, used=6659321856, free=2932498432, active=7366320128, inactive=4071714816, buffers=419409920, cached=6083518464, shared=93294592, slab=641564672)
2025-07-12 21:38:35,883:INFO:Physical Core: 6
2025-07-12 21:38:35,883:INFO:Logical Core: 12
2025-07-12 21:38:35,883:INFO:Checking libraries
2025-07-12 21:38:35,883:INFO:System:
2025-07-12 21:38:35,883:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:38:35,883:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:38:35,883:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:38:35,883:INFO:PyCaret required dependencies:
2025-07-12 21:38:35,883:INFO:                 pip: 25.1.1
2025-07-12 21:38:35,883:INFO:          setuptools: 59.6.0
2025-07-12 21:38:35,883:INFO:             pycaret: 3.3.2
2025-07-12 21:38:35,883:INFO:             IPython: 8.37.0
2025-07-12 21:38:35,883:INFO:          ipywidgets: 8.1.7
2025-07-12 21:38:35,883:INFO:                tqdm: 4.67.1
2025-07-12 21:38:35,884:INFO:               numpy: 1.26.4
2025-07-12 21:38:35,884:INFO:              pandas: 2.1.4
2025-07-12 21:38:35,884:INFO:              jinja2: 3.1.6
2025-07-12 21:38:35,884:INFO:               scipy: 1.11.4
2025-07-12 21:38:35,884:INFO:              joblib: 1.3.2
2025-07-12 21:38:35,884:INFO:             sklearn: 1.4.2
2025-07-12 21:38:35,884:INFO:                pyod: 2.0.5
2025-07-12 21:38:35,884:INFO:            imblearn: 0.13.0
2025-07-12 21:38:35,884:INFO:   category_encoders: 2.7.0
2025-07-12 21:38:35,884:INFO:            lightgbm: 4.6.0
2025-07-12 21:38:35,885:INFO:               numba: 0.61.2
2025-07-12 21:38:35,885:INFO:            requests: 2.32.4
2025-07-12 21:38:35,885:INFO:          matplotlib: 3.7.5
2025-07-12 21:38:35,885:INFO:          scikitplot: 0.3.7
2025-07-12 21:38:35,885:INFO:         yellowbrick: 1.5
2025-07-12 21:38:35,885:INFO:              plotly: 5.24.1
2025-07-12 21:38:35,885:INFO:    plotly-resampler: Not installed
2025-07-12 21:38:35,885:INFO:             kaleido: 1.0.0
2025-07-12 21:38:35,885:INFO:           schemdraw: 0.15
2025-07-12 21:38:35,885:INFO:         statsmodels: 0.14.5
2025-07-12 21:38:35,885:INFO:              sktime: 0.26.0
2025-07-12 21:38:35,885:INFO:               tbats: 1.1.3
2025-07-12 21:38:35,885:INFO:            pmdarima: 2.0.4
2025-07-12 21:38:35,885:INFO:              psutil: 7.0.0
2025-07-12 21:38:35,886:INFO:          markupsafe: 3.0.2
2025-07-12 21:38:35,886:INFO:             pickle5: Not installed
2025-07-12 21:38:35,886:INFO:         cloudpickle: 3.1.1
2025-07-12 21:38:35,886:INFO:         deprecation: 2.1.0
2025-07-12 21:38:35,886:INFO:              xxhash: 3.5.0
2025-07-12 21:38:35,886:INFO:           wurlitzer: 3.1.1
2025-07-12 21:38:35,886:INFO:PyCaret optional dependencies:
2025-07-12 21:38:35,886:INFO:                shap: Not installed
2025-07-12 21:38:35,886:INFO:           interpret: Not installed
2025-07-12 21:38:35,886:INFO:                umap: Not installed
2025-07-12 21:38:35,886:INFO:     ydata_profiling: Not installed
2025-07-12 21:38:35,887:INFO:  explainerdashboard: Not installed
2025-07-12 21:38:35,887:INFO:             autoviz: Not installed
2025-07-12 21:38:35,887:INFO:           fairlearn: Not installed
2025-07-12 21:38:35,887:INFO:          deepchecks: Not installed
2025-07-12 21:38:35,887:INFO:             xgboost: Not installed
2025-07-12 21:38:35,887:INFO:            catboost: Not installed
2025-07-12 21:38:35,887:INFO:              kmodes: Not installed
2025-07-12 21:38:35,887:INFO:             mlxtend: Not installed
2025-07-12 21:38:35,887:INFO:       statsforecast: Not installed
2025-07-12 21:38:35,887:INFO:        tune_sklearn: Not installed
2025-07-12 21:38:35,887:INFO:                 ray: Not installed
2025-07-12 21:38:35,887:INFO:            hyperopt: Not installed
2025-07-12 21:38:35,887:INFO:              optuna: Not installed
2025-07-12 21:38:35,887:INFO:               skopt: Not installed
2025-07-12 21:38:35,887:INFO:              mlflow: Not installed
2025-07-12 21:38:35,887:INFO:              gradio: Not installed
2025-07-12 21:38:35,887:INFO:             fastapi: Not installed
2025-07-12 21:38:35,887:INFO:             uvicorn: Not installed
2025-07-12 21:38:35,887:INFO:              m2cgen: Not installed
2025-07-12 21:38:35,887:INFO:           evidently: Not installed
2025-07-12 21:38:35,887:INFO:               fugue: Not installed
2025-07-12 21:38:35,887:INFO:           streamlit: 1.46.1
2025-07-12 21:38:35,887:INFO:             prophet: Not installed
2025-07-12 21:38:35,887:INFO:None
2025-07-12 21:38:35,888:INFO:Set up data.
2025-07-12 21:38:35,892:INFO:Set up folding strategy.
2025-07-12 21:38:35,892:INFO:Set up train/test split.
2025-07-12 21:38:35,895:INFO:Set up index.
2025-07-12 21:38:35,895:INFO:Assigning column types.
2025-07-12 21:38:35,898:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:38:35,898:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,901:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,904:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,941:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,968:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:35,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:35,970:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,973:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:38:35,975:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,012:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,039:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,040:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,040:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:38:36,043:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,046:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,082:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,111:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,111:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,112:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,115:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,118:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,155:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,183:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,183:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,183:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:38:36,189:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,226:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,255:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,255:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,256:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,262:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,300:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,328:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,328:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,328:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,329:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:38:36,371:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,399:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,399:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,400:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,443:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,471:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,472:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,472:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:38:36,515:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,543:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,543:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,589:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:38:36,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,617:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,617:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:38:36,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:36,762:INFO:Preparing preprocessing pipeline...
2025-07-12 21:38:36,762:INFO:Set up simple imputation.
2025-07-12 21:38:36,765:INFO:Set up encoding of ordinal features.
2025-07-12 21:38:36,766:INFO:Set up encoding of categorical features.
2025-07-12 21:38:36,802:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:38:36,815:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neig...
                 TransformerWrapper(include=['property_type'],
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-07-12 21:38:36,815:INFO:Creating final display dataframe.
2025-07-12 21:38:36,939:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 13)
4        Transformed data shape        (1159, 16)
5   Transformed train set shape         (811, 16)
6    Transformed test set shape         (348, 16)
7              Numeric features                10
8          Categorical features                 2
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              3fb5
2025-07-12 21:38:37,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:37,012:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:37,083:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:37,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:38:37,084:INFO:setup() successfully completed in 1.2s...............
2025-07-12 21:38:37,084:INFO:Initializing load_model()
2025-07-12 21:38:37,084:INFO:load_model(model_name=modelos/modelo_retiro, platform=None, authentication=None, verbose=True)
2025-07-12 21:38:37,101:INFO:Initializing finalize_model()
2025-07-12 21:38:37,101:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaecaa0a30>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:38:37,101:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-07-12 21:38:37,104:INFO:Initializing create_model()
2025-07-12 21:38:37,104:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaecaa0a30>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:38:37,104:INFO:Checking exceptions
2025-07-12 21:38:37,105:INFO:Importing libraries
2025-07-12 21:38:37,105:INFO:Copying training dataset
2025-07-12 21:38:37,105:INFO:Defining folds
2025-07-12 21:38:37,105:INFO:Declaring metric variables
2025-07-12 21:38:37,105:INFO:Importing untrained model
2025-07-12 21:38:37,105:INFO:Declaring custom model
2025-07-12 21:38:37,106:INFO:Extra Trees Regressor Imported successfully
2025-07-12 21:38:37,107:INFO:Cross validation set to False
2025-07-12 21:38:37,107:INFO:Fitting Model
2025-07-12 21:38:37,214:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:38:37,214:INFO:create_model() successfully completed......................................
2025-07-12 21:38:37,392:INFO:_master_model_container: 0
2025-07-12 21:38:37,392:INFO:_display_container: 1
2025-07-12 21:38:37,407:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:38:37,407:INFO:finalize_model() successfully completed......................................
2025-07-12 21:38:37,598:INFO:Initializing predict_model()
2025-07-12 21:38:37,598:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abaecaa0a30>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abaecb35750>)
2025-07-12 21:38:37,598:INFO:Checking exceptions
2025-07-12 21:38:37,598:INFO:Preloading libraries
2025-07-12 21:38:37,599:INFO:Set up data.
2025-07-12 21:38:37,601:INFO:Set up index.
2025-07-12 21:39:42,335:INFO:PyCaret RegressionExperiment
2025-07-12 21:39:42,336:INFO:Logging name: reg-default-name
2025-07-12 21:39:42,336:INFO:ML Usecase: MLUsecase.REGRESSION
2025-07-12 21:39:42,336:INFO:version 3.3.2
2025-07-12 21:39:42,336:INFO:Initializing setup()
2025-07-12 21:39:42,336:INFO:self.USI: bad9
2025-07-12 21:39:42,336:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'gpu_param', 'transform_target_param', 'X_train', 'pipeline', 'exp_name_log', 'idx', 'seed', 'X', 'y', 'USI', 'target_param', '_available_plots', 'n_jobs_param', 'data', 'exp_id', 'y_test', 'fold_generator', 'logging_param', 'fold_shuffle_param', 'log_plots_param', 'memory', '_ml_usecase', 'html_param', 'X_test', 'fold_groups_param'}
2025-07-12 21:39:42,336:INFO:Checking environment
2025-07-12 21:39:42,336:INFO:python_version: 3.10.12
2025-07-12 21:39:42,336:INFO:python_build: ('main', 'May 27 2025 17:12:29')
2025-07-12 21:39:42,336:INFO:machine: x86_64
2025-07-12 21:39:42,336:INFO:platform: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:39:42,337:INFO:Memory: svmem(total=16094748672, available=9088704512, percent=43.5, used=6565130240, free=3022856192, active=7264399360, inactive=4073652224, buffers=419557376, cached=6087204864, shared=95191040, slab=641626112)
2025-07-12 21:39:42,337:INFO:Physical Core: 6
2025-07-12 21:39:42,337:INFO:Logical Core: 12
2025-07-12 21:39:42,337:INFO:Checking libraries
2025-07-12 21:39:42,337:INFO:System:
2025-07-12 21:39:42,337:INFO:    python: 3.10.12 (main, May 27 2025, 17:12:29) [GCC 11.4.0]
2025-07-12 21:39:42,338:INFO:executable: /home/laura/app/tfm_env/bin/python3
2025-07-12 21:39:42,338:INFO:   machine: Linux-6.8.0-60-generic-x86_64-with-glibc2.35
2025-07-12 21:39:42,338:INFO:PyCaret required dependencies:
2025-07-12 21:39:42,338:INFO:                 pip: 25.1.1
2025-07-12 21:39:42,338:INFO:          setuptools: 59.6.0
2025-07-12 21:39:42,338:INFO:             pycaret: 3.3.2
2025-07-12 21:39:42,338:INFO:             IPython: 8.37.0
2025-07-12 21:39:42,338:INFO:          ipywidgets: 8.1.7
2025-07-12 21:39:42,338:INFO:                tqdm: 4.67.1
2025-07-12 21:39:42,338:INFO:               numpy: 1.26.4
2025-07-12 21:39:42,338:INFO:              pandas: 2.1.4
2025-07-12 21:39:42,338:INFO:              jinja2: 3.1.6
2025-07-12 21:39:42,338:INFO:               scipy: 1.11.4
2025-07-12 21:39:42,338:INFO:              joblib: 1.3.2
2025-07-12 21:39:42,338:INFO:             sklearn: 1.4.2
2025-07-12 21:39:42,338:INFO:                pyod: 2.0.5
2025-07-12 21:39:42,338:INFO:            imblearn: 0.13.0
2025-07-12 21:39:42,338:INFO:   category_encoders: 2.7.0
2025-07-12 21:39:42,338:INFO:            lightgbm: 4.6.0
2025-07-12 21:39:42,339:INFO:               numba: 0.61.2
2025-07-12 21:39:42,339:INFO:            requests: 2.32.4
2025-07-12 21:39:42,339:INFO:          matplotlib: 3.7.5
2025-07-12 21:39:42,339:INFO:          scikitplot: 0.3.7
2025-07-12 21:39:42,339:INFO:         yellowbrick: 1.5
2025-07-12 21:39:42,339:INFO:              plotly: 5.24.1
2025-07-12 21:39:42,339:INFO:    plotly-resampler: Not installed
2025-07-12 21:39:42,339:INFO:             kaleido: 1.0.0
2025-07-12 21:39:42,339:INFO:           schemdraw: 0.15
2025-07-12 21:39:42,339:INFO:         statsmodels: 0.14.5
2025-07-12 21:39:42,339:INFO:              sktime: 0.26.0
2025-07-12 21:39:42,339:INFO:               tbats: 1.1.3
2025-07-12 21:39:42,339:INFO:            pmdarima: 2.0.4
2025-07-12 21:39:42,339:INFO:              psutil: 7.0.0
2025-07-12 21:39:42,339:INFO:          markupsafe: 3.0.2
2025-07-12 21:39:42,339:INFO:             pickle5: Not installed
2025-07-12 21:39:42,339:INFO:         cloudpickle: 3.1.1
2025-07-12 21:39:42,339:INFO:         deprecation: 2.1.0
2025-07-12 21:39:42,339:INFO:              xxhash: 3.5.0
2025-07-12 21:39:42,339:INFO:           wurlitzer: 3.1.1
2025-07-12 21:39:42,339:INFO:PyCaret optional dependencies:
2025-07-12 21:39:42,339:INFO:                shap: Not installed
2025-07-12 21:39:42,339:INFO:           interpret: Not installed
2025-07-12 21:39:42,339:INFO:                umap: Not installed
2025-07-12 21:39:42,340:INFO:     ydata_profiling: Not installed
2025-07-12 21:39:42,340:INFO:  explainerdashboard: Not installed
2025-07-12 21:39:42,340:INFO:             autoviz: Not installed
2025-07-12 21:39:42,340:INFO:           fairlearn: Not installed
2025-07-12 21:39:42,340:INFO:          deepchecks: Not installed
2025-07-12 21:39:42,340:INFO:             xgboost: Not installed
2025-07-12 21:39:42,340:INFO:            catboost: Not installed
2025-07-12 21:39:42,340:INFO:              kmodes: Not installed
2025-07-12 21:39:42,340:INFO:             mlxtend: Not installed
2025-07-12 21:39:42,340:INFO:       statsforecast: Not installed
2025-07-12 21:39:42,340:INFO:        tune_sklearn: Not installed
2025-07-12 21:39:42,340:INFO:                 ray: Not installed
2025-07-12 21:39:42,340:INFO:            hyperopt: Not installed
2025-07-12 21:39:42,340:INFO:              optuna: Not installed
2025-07-12 21:39:42,340:INFO:               skopt: Not installed
2025-07-12 21:39:42,340:INFO:              mlflow: Not installed
2025-07-12 21:39:42,340:INFO:              gradio: Not installed
2025-07-12 21:39:42,340:INFO:             fastapi: Not installed
2025-07-12 21:39:42,340:INFO:             uvicorn: Not installed
2025-07-12 21:39:42,340:INFO:              m2cgen: Not installed
2025-07-12 21:39:42,341:INFO:           evidently: Not installed
2025-07-12 21:39:42,341:INFO:               fugue: Not installed
2025-07-12 21:39:42,341:INFO:           streamlit: 1.46.1
2025-07-12 21:39:42,341:INFO:             prophet: Not installed
2025-07-12 21:39:42,341:INFO:None
2025-07-12 21:39:42,341:INFO:Set up data.
2025-07-12 21:39:42,344:INFO:Set up folding strategy.
2025-07-12 21:39:42,344:INFO:Set up train/test split.
2025-07-12 21:39:42,347:INFO:Set up index.
2025-07-12 21:39:42,348:INFO:Assigning column types.
2025-07-12 21:39:42,350:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-07-12 21:39:42,351:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,354:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,357:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,394:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,422:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,424:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,426:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,429:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,466:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,494:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,495:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,495:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,495:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2025-07-12 21:39:42,499:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,502:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,539:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,566:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,570:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,573:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,609:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,638:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2025-07-12 21:39:42,643:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,680:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,708:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,709:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,709:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,715:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,751:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,779:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,780:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2025-07-12 21:39:42,822:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,849:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,850:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,891:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,919:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,919:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,919:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-07-12 21:39:42,961:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:42,988:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:42,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,030:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2025-07-12 21:39:43,059:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,059:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,059:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2025-07-12 21:39:43,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,205:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,205:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,206:INFO:Preparing preprocessing pipeline...
2025-07-12 21:39:43,206:INFO:Set up simple imputation.
2025-07-12 21:39:43,208:INFO:Set up encoding of ordinal features.
2025-07-12 21:39:43,209:INFO:Set up encoding of categorical features.
2025-07-12 21:39:43,247:INFO:Finished creating preprocessing pipeline.
2025-07-12 21:39:43,261:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neig...
                 TransformerWrapper(include=['property_type'],
                                    transformer=OrdinalEncoder(cols=['property_type'],
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True)))])
2025-07-12 21:39:43,261:INFO:Creating final display dataframe.
2025-07-12 21:39:43,390:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    property_price
2                   Target type        Regression
3           Original data shape        (1159, 13)
4        Transformed data shape        (1159, 16)
5   Transformed train set shape         (811, 16)
6    Transformed test set shape         (348, 16)
7              Numeric features                10
8          Categorical features                 2
9      Rows with missing values              0.8%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              bad9
2025-07-12 21:39:43,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,464:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-07-12 21:39:43,537:INFO:setup() successfully completed in 1.2s...............
2025-07-12 21:39:43,537:INFO:Initializing load_model()
2025-07-12 21:39:43,537:INFO:load_model(model_name=modelos/modelo_retiro, platform=None, authentication=None, verbose=True)
2025-07-12 21:39:43,553:INFO:Initializing finalize_model()
2025-07-12 21:39:43,553:INFO:finalize_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae4199ed0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-07-12 21:39:43,553:INFO:Finalizing ExtraTreesRegressor(n_jobs=-1, random_state=42)
2025-07-12 21:39:43,555:INFO:Initializing create_model()
2025-07-12 21:39:43,556:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae4199ed0>, estimator=ExtraTreesRegressor(n_jobs=-1, random_state=42), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-07-12 21:39:43,556:INFO:Checking exceptions
2025-07-12 21:39:43,556:INFO:Importing libraries
2025-07-12 21:39:43,556:INFO:Copying training dataset
2025-07-12 21:39:43,557:INFO:Defining folds
2025-07-12 21:39:43,557:INFO:Declaring metric variables
2025-07-12 21:39:43,557:INFO:Importing untrained model
2025-07-12 21:39:43,557:INFO:Declaring custom model
2025-07-12 21:39:43,558:INFO:Extra Trees Regressor Imported successfully
2025-07-12 21:39:43,558:INFO:Cross validation set to False
2025-07-12 21:39:43,559:INFO:Fitting Model
2025-07-12 21:39:43,666:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:39:43,666:INFO:create_model() successfully completed......................................
2025-07-12 21:39:43,846:INFO:_master_model_container: 0
2025-07-12 21:39:43,846:INFO:_display_container: 1
2025-07-12 21:39:43,860:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))])
2025-07-12 21:39:43,860:INFO:finalize_model() successfully completed......................................
2025-07-12 21:39:44,043:INFO:Initializing predict_model()
2025-07-12 21:39:44,043:INFO:predict_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x7abae4199ed0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['bathroom_count', 'bedroom_count',
                                             'floor', 'latitude', 'longitude',
                                             'lot_size', 'exterior', 'ascensor',
                                             'reformado_bin',
                                             'energy_certificate_encoded'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['property_type', 'neighborhood'],...
                                                               handle_missing='return_nan',
                                                               mapping=[{'col': 'property_type',
                                                                         'data_type': dtype('O'),
                                                                         'mapping': chalet    0
flat      1
NaN      -1
dtype: int64}]))),
                ('onehot_encoding',
                 TransformerWrapper(include=['neighborhood'],
                                    transformer=OneHotEncoder(cols=['neighborhood'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('actual_estimator',
                 ExtraTreesRegressor(n_jobs=-1, random_state=42))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7abc39c476d0>)
2025-07-12 21:39:44,043:INFO:Checking exceptions
2025-07-12 21:39:44,043:INFO:Preloading libraries
2025-07-12 21:39:44,044:INFO:Set up data.
2025-07-12 21:39:44,049:INFO:Set up index.
